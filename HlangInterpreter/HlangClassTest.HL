/*define class Person then
  children is 0
  lovestwo is "vanilla"
  private static monkey is true
  static function sayHello() then
    print("hello")
  function Person(age, name) then
    this.age is age
    this.name is name
  function printPerson() then
    print("my name is " plus this.name plus " and I'm " plus this.age plus " years old")

define class Jane extends Person then
  children is 2 plus 2
  function Jane(hairColor, name, age) then
    parent(age, name)
    this.hairColor is hairColor
  function testPrint() then
    print(this.hairColor)
  function PrintJane() then
    print("name: " plus this.name plus " age: " plus this.age plus " hair color: " plus this.hairColor plus "with children" plus this.children)

define class Patricia extends Person then
  static loves is "ice cream"
  function Patricia() then
    parent(41, "Patricia")
  static function addition(a, b) then
    return a plus b
  static function printLove() then
    print(loves)
  function additionTwoNumbers(a, b) then
    print(this.lovestwo)
    return addition(a, b)

p is Patricia()
p.printPerson()
//print(Person.monkey)
Person.sayHello()*/

// testing singleton
define class Singleton then
  private static instance is nothing
  private static instance2 is nothing
  private function Singleton() then
    
  static function Instance() then
    if instance is equal to nothing then
      instance is Singleton()
    return instance
  static function Instance2() then
    if instance2 is equal to nothing then
      instance2 is Singleton()
    return instance2

print(Singleton.Instance())
s1 is Singleton.Instance()
s2 is Singleton.Instance2()
if s1 is equal to s2 then
  print("Objects are the same instance")
else then
  print("Objects are not the same same")

